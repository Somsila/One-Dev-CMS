import pg from "pg";
import { createDatabaseAdapter } from "../internal/database-adapter.js";
let _client;
export default createDatabaseAdapter((opts) => {
  function getClient() {
    if (_client) {
      return _client;
    }
    const url = "url" in opts ? opts?.url?.startsWith("process.env.") ? process.env[opts?.url?.replace("process.env.", "")] : opts?.url : "";
    const client = new pg.Client(url ? url : opts);
    _client = client.connect().then(() => {
      _client = client;
      return _client;
    });
    return _client;
  }
  return {
    async all(sql, params) {
      const db = await getClient();
      const { rows } = params ? await db.query(sql, params) : await db.query(sql);
      return rows;
    },
    async first(sql, params) {
      const db = await getClient();
      const { rows } = params ? await db.query(sql, params) : await db.query(sql);
      return rows[0];
    },
    async exec(sql) {
      const db = await getClient();
      await db.query(sql);
    }
  };
});
